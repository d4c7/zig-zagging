<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Zig-zagueando Blog</title>
    <link>https://d4c7.github.io/zig-zagueando/posts/</link>
    <description>Contenido reciente de Zig-zagueando Blog</description>
    <generator>Zig-Zagueando</generator>
    <language>es</language>
    <lastBuildDate>Sun, 18 Jun 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://d4c7.github.io/zig-zagueando/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Zig comptime</title>
      <link>https://d4c7.github.io/zig-zagueando/posts/zig-comptime/</link>
      <pubDate>Sun, 18 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://d4c7.github.io/zig-zagueando/posts/zig-comptime/</guid>
      <description>¡Hola a todos! 🙌 ¡Vamos a sumergirnos en uno de los conceptos más apasionantes y poderosos de Zig: el comptime! Esta característica, si no has oído hablar de ella, puede cambiar completamente tu perspectiva sobre cómo escribir código. 😮
¿Qué es comptime? El término comptime viene de &amp;ldquo;Compile Time&amp;rdquo; que, traducido al español, sería &amp;ldquo;Tiempo de Compilación&amp;rdquo;. En realidad has usado esa funcionalidad muchas veces, en su forma más básica, cada vez que utilizas una constante.</description>
    </item>
    
    <item>
      <title>WebAssembly y Zig: Comenzando 🕸️🚀</title>
      <link>https://d4c7.github.io/zig-zagueando/posts/webassembly-y-zig-comenzando/</link>
      <pubDate>Mon, 22 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://d4c7.github.io/zig-zagueando/posts/webassembly-y-zig-comenzando/</guid>
      <description>¡Hola, entusiastas de Zig! Hoy vamos a explorar un emocionante campo donde Zig realmente brilla: WebAssembly (Wasm). Prepárate para desbloquear el poder de Zig en el navegador! 🌐💪
¿Qué es WebAssembly? 🧐 WebAssembly es un formato de instrucción binaria diseñado como un objetivo portable para la compilación de lenguajes de alto nivel como C, C++, Rust, y por supuesto, Zig. Nos permite ejecutar código en la web a una velocidad cercana a la nativa, abriendo la web a un nuevo rango de aplicaciones.</description>
    </item>
    
    <item>
      <title>Una guía del sistema de construcción de Zig 🏗️</title>
      <link>https://d4c7.github.io/zig-zagueando/posts/una-gu%C3%ADa-del-sistema-de-construcci%C3%B3n-en-zig/</link>
      <pubDate>Mon, 15 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://d4c7.github.io/zig-zagueando/posts/una-gu%C3%ADa-del-sistema-de-construcci%C3%B3n-en-zig/</guid>
      <description>¡Hola, entusiastas de Zig! 👋 En nuestra publicación anterior, dimos nuestros primeros pasos en el mundo de Zig. Hoy, vamos a adentrarnos en el corazón de la gestión de proyectos de Zig: el sistema de construcción de Zig. ¡Empecemos! 🎉
¿Qué es el sistema de construcción de Zig? 🤔 El sistema de construcción de Zig es una herramienta poderosa e incorporada que te ayuda a gestionar, compilar, probar y enlazar tus proyectos.</description>
    </item>
    
    <item>
      <title>Configura Visual Studio Code para programar en Zig 🎨</title>
      <link>https://d4c7.github.io/zig-zagueando/posts/configura-visual-studio-code-para-programar-en-zig/</link>
      <pubDate>Sat, 13 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://d4c7.github.io/zig-zagueando/posts/configura-visual-studio-code-para-programar-en-zig/</guid>
      <description>¡Saludos, entusiastas de Zig! 👋 Es el momento de configurar un entorno de desarrollo cómodo para mejorar tu experiencia de programación en Zig. En esta publicación, te guiaré para configurar Visual Studio Code (VS Code) para el desarrollo en Zig, incluyendo edición de código, ejecución y depuración. ¡Sumérgete en el tema! 🚀
Configurando Visual Studio Code para el desarrollo en Zig 🛠️ Para configurar VS Code para el desarrollo en Zig, sigue estos pasos:</description>
    </item>
    
    <item>
      <title>Instalando Zig en Linux, Windows y macOS 🌍</title>
      <link>https://d4c7.github.io/zig-zagueando/posts/instalando-zig-en-linux-windows-y-macos/</link>
      <pubDate>Fri, 12 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://d4c7.github.io/zig-zagueando/posts/instalando-zig-en-linux-windows-y-macos/</guid>
      <description>¡Hola, entusiastas de Zig! 👋 En la publicación anteriores hemos visto que Zig mola mucho. Pero antes de sumergirnos en temas más avanzados, vamos a asegurarnos de tener Zig instalado y funcionando en nuestros sistemas. En esta publicación, te guiaré en la instalación de Zig en Linux, Windows y macOS. ¡Comencemos! 🚀
Instalando Zig en Linux 🐧 ⚠️ ¡Atención, programador! Este post utiliza la versión dev 0.11.0 de Zig
Para usuarios de Linux, puedes instalar Zig utilizando los paquetes precompilados o construyéndolo desde el código fuente.</description>
    </item>
    
    <item>
      <title>Zig: Un lenguaje de programación simple y potente 🚀</title>
      <link>https://d4c7.github.io/zig-zagueando/posts/zig-un-lenguaje-de-programaci%C3%B3n-simple-y-potente/</link>
      <pubDate>Thu, 11 May 2023 23:59:59 +0000</pubDate>
      
      <guid>https://d4c7.github.io/zig-zagueando/posts/zig-un-lenguaje-de-programaci%C3%B3n-simple-y-potente/</guid>
      <description>¡Bienvenido al emocionante mundo de Zig! 🚀 Si estás buscando un lenguaje de programación que combine eficiencia, seguridad y un enfoque en el rendimiento, ¡has llegado al lugar correcto!
¿Por qué Zig? 🎯 Una de las primeras cosas que notarás al explorar Zig es su enfoque en la seguridad y la prevención de errores. El compilador de Zig es estricto y te ayudará a detectar problemas en tiempo de compilación antes de que se conviertan en pesadillas en tiempo de ejecución.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://d4c7.github.io/zig-zagueando/posts/145-zig-allocators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://d4c7.github.io/zig-zagueando/posts/145-zig-allocators/</guid>
      <description>https://uwspace.uwaterloo.ca/handle/10012/18329
Los asignadores de memoria son un componente crítico de cualquier sistema que requiere la gestión dinámica de la memoria, como un sistema operativo o un tiempo de ejecución del lenguaje de programación. Su trabajo es gestionar la asignación y desasignación de bloques de memoria, de acuerdo a las solicitudes hechas por los programas o procesos que se ejecutan en el sistema. Aquí hay algunas estrategias que utilizan los asignadores de memoria:</description>
    </item>
    
    <item>
      <title></title>
      <link>https://d4c7.github.io/zig-zagueando/posts/strings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://d4c7.github.io/zig-zagueando/posts/strings/</guid>
      <description>https://zig.news/kristoff/what-s-a-string-literal-in-zig-31e9
https://zig.news/david_vanderson/beginner-s-notes-on-slices-arrays-strings-5b67</description>
    </item>
    
  </channel>
</rss>